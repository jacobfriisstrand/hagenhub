name: Check Prisma migration on PR to develop

on:
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: hagenhub
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 10s

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load env file
        run: cat .env >> $GITHUB_ENV

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          
      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          timeout 30s bash -c 'until pg_isready -h localhost -p 5432; do sleep 1; done'
          echo "PostgreSQL is ready!"
          
      - name: Check schema and migrations
        run: |
          set -e
          
          # Fetch the base branch
          git fetch origin ${{ github.base_ref }}
          
          # Check if schema.prisma exists in base branch
          if git cat-file -e origin/${{ github.base_ref }}:prisma/schema.prisma 2>/dev/null; then
            SCHEMA_DIFF=$(git diff origin/${{ github.base_ref }}...HEAD -- prisma/schema.prisma || true)
          else
            SCHEMA_DIFF="new_file"
          fi
          
          # Check for migration files in this PR
          MIGRATIONS_EXIST=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep 'prisma/migrations/' || true)
          
          if [ ! -z "$SCHEMA_DIFF" ] && [ -z "$MIGRATIONS_EXIST" ]; then
            echo "‚ùå Schema changes detected but no migration was created!"
            echo "Changes found in schema.prisma but no corresponding migration file exists."
            echo "üëâ Please run: npx prisma migrate dev --name your-feature-name"
            exit 1
          fi
          
          # Check migration status
          echo "Checking migration status..."
          if ! npx prisma migrate status; then
            echo "‚ùå Migration check failed!"
            echo "This usually means your schema doesn't match your migrations."
            echo "üëâ Run: npx prisma migrate dev to fix the mismatch"
            exit 1
          fi
          
          echo "‚úÖ Schema and migration check passed."